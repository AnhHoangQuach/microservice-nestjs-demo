version: '3'

services:
  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - backend

  product-service:
    build: ./product-service
    restart: always
    hostname: product-service
    env_file:
      - .env
    ports:
      - "${PRODUCT_SERVICE_PORT}:${PRODUCT_SERVICE_PORT}"
    networks:
      - backend
    depends_on:
      - product-db

  token-service:
    build: ./token-service
    restart: always
    hostname: token-service
    env_file:
      - .env
    ports:
      - "${TOKEN_SERVICE_PORT}:${TOKEN_SERVICE_PORT}"
    networks:
      - backend
    depends_on:
      - token-db

  mailer:
    build: ./mailer
    restart: always
    hostname: mailer
    env_file:
      - .env
    ports:
      - "${MAILER_SERVICE_PORT}:${MAILER_SERVICE_PORT}"
    networks:
      - backend

  user-service:
    build: ./user-service
    restart: always
    hostname: user-service
    env_file:
      - .env
    networks:
      - backend
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    depends_on:
      - user-db
      - mailer

  product-db:
    image: 'mongo:latest'
    restart: always
    volumes:
      - "./product-db/data:/data/db"
    ports:
      - 27017:27017
    networks:
      - backend

  token-db:
    image: 'mongo:latest'
    restart: always
    volumes:
      - "./token-db/data:/data/db"
    ports:
      - 27018:27017
    networks:
      - backend

  user-db:
    image: 'mongo:latest'
    restart: always
    volumes:
      - "./user-db/data:/data/db"
    ports:
      - 27019:27017
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - backend

networks:
  backend:
    driver: bridge
